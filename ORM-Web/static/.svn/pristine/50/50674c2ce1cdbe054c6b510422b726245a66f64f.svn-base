<html>

<head>
	<title>KRIs</title>
	<meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1" />
	<meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
		integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
	<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
		integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
		crossorigin="anonymous"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
		integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
		crossorigin="anonymous"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
		integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
		crossorigin="anonymous"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

	<link href="./kri-measurement.component.scss" type="text/css" rel="stylesheet">
	<link href="./kri-measurement.component.scss" type="text/css" rel="stylesheet">
</head>

<body>
	<!--START NAV-->
	<mat-toolbar class="fontSize">
		<span>Key Risk Indicator | KRI Measurement
		</span>
	</mat-toolbar>
	<!-- END NAV -->

	<!--START SUBNAV-->
	<div class="w-100 h-7">
		<div class="row mx-0 subnavbg h-100">
			<div class="col-12 px-0 h-100 position-relative subnavfilter">
				<div class="d-flex justify-content-strart align-items-center vmiddleLeft position-absolute w-100 px-3">
					<!-- <h1 class="pghead pr-2">Key Risk Indicator  |  KRI Measurement</h1> -->
					<div class="d-flex justify-content-strart align-items-center pgheadfields">
						<div class="input-field row" style="left: 22px !important">
							<div class="col-3 text-right px-0" for="group" style="margin-top: 10px">Group</div>
							<div class="col-9 pl-1">
								<!-- <mat-form-field class="dropdown-class" style="background: #ffffff;
										width: 11rem;
										height: 36px;
										margin-top: 10px;">
										<mat-select (selectionChange)="filterGroups($event)" [(ngModel)]="groupSelected">
											<mat-option value="">ALL</mat-option>
											<mat-option *ngFor="let group of kriService?.kriMeasurementGroups" [value]="group.GroupID">
												{{group.GroupName}}
											</mat-option>
										</mat-select>
									</mat-form-field> -->
								<mat-form-field class="dropdown-class" style="background: #ffffff;
										width: 11rem;
										height: 36px;
										margin-top: 10px;">
									<mat-select (selectionChange)="filterGroups($event)" [(ngModel)]="groupSelected">
										<mat-option value="">ALL</mat-option>
										<mat-option *ngFor="let group of kriService?.kriMeasurementGroups"
											[value]="group.GroupID">
											{{group.GroupName}}
										</mat-option>
									</mat-select>
								</mat-form-field>
							</div>
						</div>
						<div class="input-field row" style="left: 82px !important;">
							<div class="col-3 text-right px-0" for="unit" style="margin-top: 10px">Unit</div>
							<div class="col-9 pl-1">
								<mat-form-field class="dropdown-class" style="background: #ffffff;
										width: 11rem;
										height: 36px;
										margin-top: 10px;">
									<mat-select [disabled]="groupSelected=='all'"
										(selectionChange)="filterUnits($event)" [(ngModel)]="unitSelected">
										<mat-option value="">ALL</mat-option>
										<mat-option *ngFor="let unit of getUnitsNames(kriService?.kriMeasurementUnits)"
											[value]="unit.UnitID">
											{{unit.UnitName}}
										</mat-option>
									</mat-select>
								</mat-form-field>
							</div>
						</div>
					</div>
					<div class="px-1 filterFrequecy text-center" style="position: relative; left: 10vw;">
						<span> Reporting Frequency:&nbsp;<span
								class="reporting-frequency-font">{{kriService.kriMeasurmentsReportingFrequncy}}</span></span>
					</div>
					<!-- <div class="pr-3 filterslider"  style="position: relative; left: 11vw;">

							<div class="column" *ngIf="(kriService.powerUser == true || kriService?.kriReviewerUser == true)" style="margin-left: 11px;">
								<mat-label>All KRIs &nbsp;</mat-label>
								<mat-slide-toggle [checked]=""  (change)="changedRiskCategoryStatus($event)"></mat-slide-toggle>
								<mat-label>&nbsp;MY KRIs</mat-label>
							</div>
						</div>
						<div class="pr-3 filterinfo" style="position: relative; left: 11vw;" *ngIf="kriService.powerUser == true">
							<img src="assets/icons/icon-info-black.svg" class="d-inline-block align-middle cursor-pointer" alt="" matTooltip="Kindly filter the Department wise KRi's, Report KRI Button will be enabled once all the KRi's under the Department are Meausred">
						</div> -->
					<div class="searchfilter pr-2"
						[ngStyle]="kriService.powerUser == true ? {'position': 'relative', 'left': '23vw'} : {'position': 'relative', 'left': '25vw'}">
						<div class="w-100 position-relative">
							<div class="srhposition d-inline-block">
								<i class="fa fa-search searchtxtboxicon" aria-hidden="true"></i>
								<input type="text" class="searchtxtbox" placeholder="Search"
									(keyup)="applyFilter($event)" matInput #input [(ngModel)]="model">
							</div>
						</div>
					</div>
					<div class="reporticon text-right"
						[ngStyle]="kriService.powerUser == true ? {'position': 'relative', 'left': '24vw'} : {'position': 'relative', 'left': '27vw'}">
						<button *ngIf="dataSource.filteredData.length" mat-icon-button matTooltipPosition="right"
							(click)="exportAsExcel()">
							<img src="assets/icon-excel.svg" class="d-inline-block align-middle cursor-pointer" alt="">
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!--END SUBNAV-->
	<!-- START MIDDLE CONTENT -->
	<div class="w-100 h-83 position-relative sidebar-is-reduced">
		<div class="container-fluid pb-3 h-100">
			<div class="w-100 h-95">
				<div class="d-flex justify-content-strart mx-0 h-100  position-relative">
					<div [ngClass]="{'sidebar-is-reduced': isCollapsed, 'sidebar-is-expanded': !isCollapsed}"
						class="w-100 h-83 position-relative">
						<div class="container-fluid pb-3 h-100" style="height: 85vh !important;">
							<div class="w-100 h-95" style="width: 0px;">
								<div class="d-flex justify-content-start mx-0 h-100  position-relative">
									<div class="l-sidebar h-100  position-relative">
										<div class="js-hamburger hamposition" (click)="toggleCollapse()">
											<div class="hamburger-toggle" [ngClass]="{'is-opened': !isCollapsed}">
												<span class="bar-top"></span>
												<span class="bar-mid"></span>
												<span class="bar-bot"></span>
											</div>
										</div>
										<mat-card class="mat-bgcolor">
											<div class="sub-container" [ngStyle]="colorValue('total') && colorCode()">
												<button class="measured-text measured-text-space"
													[ngStyle]="colorValue('total') && textColor()"
													(click)="totalData()">
													<h4>Total</h4>
													<h4 class="measured" [ngStyle]="colorValue('total') && textColor()">
														{{total()}}</h4>
												</button>
											</div>
											<div class="sub-container"
												[ngStyle]="colorValue('Measured') && colorCode()">
												<button class="measured-text measured-text-space"
													[ngStyle]="colorValue('Measured') && textColor()"
													(click)="measured('Measured')">
													<p>Measured</p>
													<p class="measured"
														[ngStyle]="colorValue('Measured') && textColor()">
														{{this.measuredData('Measured')}}</p>
												</button>
											</div>
											<div class="sub-container"
												[ngStyle]="colorValue('Not Measured') && colorCode()">
												<button class="measured-text measured-text-space"
													(click)="measured('Not Measured')"
													[ngStyle]="colorValue('Not Measured') && textColor()">
													<p>Not Measured</p>
													<p class="measured"
														[ngStyle]="colorValue('Not Measured') && textColor()">
														{{this.measuredData('Not Measured')}} </p>
												</button>
											</div>
											<div class="sub-container"
												[ngStyle]="colorValue('Reported') && colorCode()">
												<button class="measured-text measured-text-space"
													(click)="measured('Reported')"
													[ngStyle]="colorValue('Reported') && textColor()">
													<p>Reported</p>
													<p class="measured"
														[ngStyle]="colorValue('Reported') && textColor()">
														{{this.measuredData('Reported')}} </p>
												</button>
											</div>
											<div class="d-flex justify-content-between sidebarstatus text-left"
												style="cursor: pointer;">
												<div class="ssapproved position-relative h-100"
													(click)="reportedStatus('total','Approved')"> Approved <span
														class="float-right">{{countReportStatus('total','Approved')}}</span>
												</div>
												<div class="ssrejected position-relative h-100"
													(click)="reportedStatus('total','Rejected')"> Rejected <span
														class="float-right">{{countReportStatus('total','Rejected')}}</span>
												</div>
												<div class="sspending position-relative h-100"
													(click)="reportedStatus('total','Pending')"> Pending <span
														class="float-right">{{countReportStatus('total','Pending')}}</span>
												</div>
											</div>
											<hr>
											<div *ngFor="let data of measurementFrequencyTotal()">
												<mat-card class="mat-card-m" *ngIf="measuredFrequencyCount(data) > 0">
													<div class="sub-container"
														[ngStyle]="colorValue(data.MeasurementFrequency) && colorCode()">
														<button class="measured-text-space"
															[ngStyle]="colorValue(data.MeasurementFrequency) && textColor()"
															(click)="measurementFrequencyData(data.MeasurementFrequency)">
															<h4>{{data.MeasurementFrequency}} </h4>
															<h4>{{measuredFrequencyCount(data)}}</h4>
														</button>
													</div>
													<div class="sub-container"
														[ngStyle]="colorValueData(data.MeasurementFrequency,'Measured') && colorCode()">
														<button class="measured measured-text-space"
															[ngStyle]="colorValueData(data.MeasurementFrequency,'Measured') && textColor()"
															(click)="measuredFrequency(data.MeasurementFrequency,'Measured')">
															<p>Measured</p>
															<p>{{MeasuredCount(data,'Measured')}}</p>
														</button>
													</div>
													<div class="sub-container"
														[ngStyle]="colorValueData(data.MeasurementFrequency,'Not Measured') && colorCode()">
														<button class="measured measured-text-space"
															[ngStyle]="colorValueData(data.MeasurementFrequency,'Not Measured') && textColor()"
															(click)="measuredFrequency(data.MeasurementFrequency,'Not Measured')">
															<p>Not Measured</p>
															<p>{{MeasuredCount(data,'Not Measured')}}</p>
														</button>
													</div>
													<div class="sub-container"
														[ngStyle]="colorValueData(data.MeasurementFrequency,'Reported') && colorCode()">
														<button class="measured measured-text-space"
															[ngStyle]="colorValueData(data.MeasurementFrequency,'Reported') && textColor()"
															(click)="measuredFrequency(data.MeasurementFrequency,'Reported')">
															<p>Reported</p>
															<p>{{MeasuredCount(data,'Reported')}}</p>
														</button>
													</div>
													<div class="d-flex justify-content-between sidebarstatus text-left"
														style="cursor: pointer;">
														<div class="ssapproved position-relative h-100"
															(click)="reportedStatus(data.MeasurementFrequency,'Approved')">
															Approved <span
																class="float-right">{{countReportStatus(data.MeasurementFrequency,'Approved')}}</span>
														</div>
														<div class="ssrejected position-relative h-100"
															(click)="reportedStatus(data.MeasurementFrequency,'Rejected')">
															Rejected <span
																class="float-right">{{countReportStatus(data.MeasurementFrequency,'Rejected')}}</span>
														</div>
														<div class="sspending position-relative h-100"
															(click)="reportedStatus(data.MeasurementFrequency,'Pending')">
															Pending <span
																class="float-right">{{countReportStatus(data.MeasurementFrequency,'Pending')}}</span>
														</div>
													</div>
												</mat-card>
											</div>
										</mat-card>
										<!-- <div class="l-sidebar__content p-2">
											<div class="w-100 h-100  leftgraph c-menu js-menu scroll">
												<h3 class="lefthead w-100 mt-4 c-menu__item" style="cursor: pointer;"
													[ngStyle]="colorValue('Not Measured') && textColor()"
													(click)="measured('')">
													<span class="text-left pl-1">Total</span> <span
														class="w-75 text-right">{{total()}}</span>
												</h3>
												<div class="w-100 toptbl pb-2 c-menu__item">
													<table class="w-100">
														<tbody>
															<tr (click)="measured('Measured')" style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Measured'}">
																<td>Measured</td>
																<td class="text-right">{{
																	this.measuredData('Measured') }}</td>
															</tr>
															<tr (click)="measured('Not Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Not Measured'}">
																<td
																	[ngStyle]="colorValue('Not Measured') && textColor()">
																	Not Measured</td>
																<td class="text-right" >{{
																	this.measuredData('Not Measured') }}</td>
															</tr>
															<tr (click)="measured('Reported')" style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Reported'}">
																<td >Reported</td>
																<td class="text-right">{{
																	this.measuredData('Reported') }}</td>
															</tr>
														</tbody>

													</table>
													<div class="d-flex justify-content-between sidebarstatus text-left"
														style="cursor: pointer;">
														<div class="ssapproved position-relative h-100"
															(click)="reportedStatus('total','Approved')"> Approved <span
																class="float-right">{{countReportStatus('total','Approved')}}</span>
														</div>
														<div class="ssrejected position-relative h-100"
															(click)="reportedStatus('total','Rejected')"> Rejected <span
																class="float-right">{{countReportStatus('total','Rejected')}}</span>
														</div>
														<div class="sspending position-relative h-100"
															(click)="reportedStatus('total','Pending')"> Pending <span
																class="float-right">{{countReportStatus('total','Pending')}}</span>
														</div>
													</div>
												</div>

												<div class="w-100 toptblbg py-1 mt-2 c-menu__item">
													<table class="w-100"
														*ngFor="let data of measurementFrequencyTotal()">
														<thead *ngIf="data.MeasurementFrequency == 'Monthly'">
															<tr (click)="measurementFrequencyData(data.MeasurementFrequency)"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== data.MeasurementFrequency}">
																<th style="width: 70%;">{{data.MeasurementFrequency}}
																</th>
																<th class="text-right totalNo" style="width: 30%;">
																	{{measuredFrequencyCount(data)}}</th>
															</tr>
														</thead>
														<tbody *ngIf="data.MeasurementFrequency == 'Monthly'">
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'MeasuredMonthly'}">
																<td>Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Not Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Not MeasuredMonthly'}">
																<td>Not Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Not Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Reported')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'ReportedMonthly'}">
																<td>Reported</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Reported')}}</p>
																</td>
															</tr>
														</tbody>
													</table>
													<div class="d-flex justify-content-between sidebarstatus text-left"
														style="cursor: pointer;">
														<div class="ssapproved position-relative h-100"
															(click)="reportedStatus('total','Approved')"> Approved <span
																class="float-right">{{countReportStatus('total','Approved')}}</span>
														</div>
														<div class="ssrejected position-relative h-100"
															(click)="reportedStatus('total','Rejected')"> Rejected <span
																class="float-right">{{countReportStatus('total','Rejected')}}</span>
														</div>
														<div class="sspending position-relative h-100"
															(click)="reportedStatus('total','Pending')"> Pending <span
																class="float-right">{{countReportStatus('total','Pending')}}</span>
														</div>
													</div>

												</div>

												<div class="w-100 toptblbg py-1 mt-2 c-menu__item">
													<table class="w-100"
														*ngFor="let data of measurementFrequencyTotal()">
														<thead *ngIf="data.MeasurementFrequency == 'Quarterly'">
															<tr (click)="measurementFrequencyData(data.MeasurementFrequency)"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== data.MeasurementFrequency}">
																<th style="width: 70%;">{{data.MeasurementFrequency}}
																</th>
																<th class="text-right totalNo" style="width: 30%;">
																	{{measuredFrequencyCount(data)}}</th>
															</tr>
														</thead>
														<tbody *ngIf="data.MeasurementFrequency == 'Quarterly'">
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'MeasuredQuarterly'}">
																<td>Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Not Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Not MeasuredQuarterly'}">
																<td>Not Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Not Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Reported')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'ReportedQuarterly'}">
																<td>Reported</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Reported')}}</p>
																</td>
															</tr>
														</tbody>
													</table>
													<div class="d-flex justify-content-between sidebarstatus text-left"
														style="cursor: pointer;">
														<div class="ssapproved position-relative h-100"
															(click)="reportedStatus('total','Approved')"> Approved <span
																class="float-right">{{countReportStatus('total','Approved')}}</span>
														</div>
														<div class="ssrejected position-relative h-100"
															(click)="reportedStatus('total','Rejected')"> Rejected <span
																class="float-right">{{countReportStatus('total','Rejected')}}</span>
														</div>
														<div class="sspending position-relative h-100"
															(click)="reportedStatus('total','Pending')"> Pending <span
																class="float-right">{{countReportStatus('total','Pending')}}</span>
														</div>
													</div>
												</div>

												<div class="w-100 toptblbg py-1 mt-2 c-menu__item">
													<table class="w-100"
														*ngFor="let data of measurementFrequencyTotal()">
														<thead *ngIf="data.MeasurementFrequency == 'Semi Annual'">
															<tr (click)="measurementFrequencyData(data.MeasurementFrequency)"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== data.MeasurementFrequency}">
																<th style="width: 70%;">{{data.MeasurementFrequency}}
																</th>
																<th class="text-right totalNo" style="width: 30%;">
																	{{measuredFrequencyCount(data)}}</th>
															</tr>
														</thead>
														<tbody *ngIf="data.MeasurementFrequency == 'Semi Annual'">
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'MeasuredSemi Annual'}">
																<td>Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Not Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Not MeasuredSemi Annual'}">
																<td>Not Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Not Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Reported')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'ReportedSemi Annual'}">
																<td>Reported</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Reported')}}</p>
																</td>
															</tr>
														</tbody>
													</table>
													<div class="d-flex justify-content-between sidebarstatus text-left"
														style="cursor: pointer;">
														<div class="ssapproved position-relative h-100"
															(click)="reportedStatus('total','Approved')"> Approved <span
																class="float-right">{{countReportStatus('total','Approved')}}</span>
														</div>
														<div class="ssrejected position-relative h-100"
															(click)="reportedStatus('total','Rejected')"> Rejected <span
																class="float-right">{{countReportStatus('total','Rejected')}}</span>
														</div>
														<div class="sspending position-relative h-100"
															(click)="reportedStatus('total','Pending')"> Pending <span
																class="float-right">{{countReportStatus('total','Pending')}}</span>
														</div>
													</div>
												</div>

												<div class="w-100 toptblbg py-1 mt-2 c-menu__item">
													<table class="w-100"
														*ngFor="let data of measurementFrequencyTotal()">
														<thead *ngIf="data.MeasurementFrequency == 'Annually'">
															<tr (click)="measurementFrequencyData(data.MeasurementFrequency)"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== data.MeasurementFrequency}">
																<th style="width: 70%;">{{data.MeasurementFrequency}}
																</th>
																<th class="text-right totalNo" style="width: 30%;">
																	{{measuredFrequencyCount(data)}}</th>
															</tr>
														</thead>
														<tbody *ngIf="data.MeasurementFrequency == 'Annually'">
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'MeasuredAnnually'}">
																<td>Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Not Measured')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'Not MeasuredAnnually'}">
																<td>Not Measured</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Not Measured')}}</p>
																</td>
															</tr>
															<tr (click)="measuredFrequency(data.MeasurementFrequency,'Reported')"
																style="cursor: pointer;"
																[ngClass]="{'selected-row': selectedRow=== 'ReportedAnnually'}">
																<td>Reported</td>
																<td class="text-right">
																	<p>{{MeasuredCount(data,'Reported')}}</p>
																</td>
															</tr>
														</tbody>
													</table>
													<div class="d-flex justify-content-between sidebarstatus text-left"
														style="cursor: pointer;">
														<div class="ssapproved position-relative h-100"
															(click)="reportedStatus('total','Approved')"> Approved <span
																class="float-right">{{countReportStatus('total','Approved')}}</span>
														</div>
														<div class="ssrejected position-relative h-100"
															(click)="reportedStatus('total','Rejected')"> Rejected <span
																class="float-right">{{countReportStatus('total','Rejected')}}</span>
														</div>
														<div class="sspending position-relative h-100"
															(click)="reportedStatus('total','Pending')"> Pending <span
																class="float-right">{{countReportStatus('total','Pending')}}</span>
														</div>
													</div>
												</div>
											</div>
										</div> -->
									</div>
								</div>
							</div>
						</div>
					</div>
					<!-- END LEFT CONTENT -->

					<!-- MIDDLE CONTENT -->
					<main class="l-main h-100" style="width: 1700vw;">
						<div class="content-wrapper content-wrapper--with-bg ">
							<div class="row mx-0 h-100">
								<div class="col-12 pl-0 pr-0 ">
									<div class="h-100 w-100">
										<div class="cardbody h-100">
											<div class="w-100 h-100">
												<table class="table table-hover cardtbl" mat-table
													[dataSource]="dataSource" matSort id="kpiScoreID">
													<!-- <ng-container matColumnDef="rejectApproveBtn">
															<th mat-header-cell *matHeaderCellDef [ngStyle]="{'display': 'none','white-space': 'nowrap', 'border-right': '1px solid #cecece !important' }" style="white-space: nowrap;"> </th>
															<td mat-cell *matCellDef="let row">
																<div class="d-flex justify-content-center flex-wrap">
																	<div class="round w-100 text-center" [ngClass]="(kriService.kriReviewerUser == false || department == 'own' || (kriService?.kriReviewerUser == true && (row.StatusName == 'Measured' || row.StatusName == 'Not Measured'))) ? 'checkDisabled' : 'checkred'">
																		<input type="checkbox"  id="reject" value="row.ReportStatusID == 2 ? true : false" (click)="approvedRejectedDetails($event, 'rejected', row)" [disabled]="(kriService.kriReviewerUser == false || department == 'own' || (kriService?.kriReviewerUser == true && (row.StatusName == 'Measured' || row.StatusName == 'Not Measured')))"/>
																		<label for="reject"></label>
																	</div>

																	<div class="round w-100 mt-2 text-center"  [ngClass]="(kriService.kriReviewerUser == false || department == 'own' || (kriService?.kriReviewerUser == true && (row.StatusName == 'Measured' || row.StatusName == 'Not Measured'))) ? 'checkDisabled' : 'checkgreen'">
																		<input type="checkbox"  id="approve" value="row.ReportStatusID == 3 ? true : false"  (click)="approvedRejectedDetails($event,'approved',row)" [disabled]="(kriService.kriReviewerUser == false || department == 'own' || (kriService?.kriReviewerUser == true && (row.StatusName == 'Measured' || row.StatusName == 'Not Measured')))"/>
																		<label for="approve"></label>
																	</div>
																</div>
															</td>
														</ng-container> -->
													<ng-container matColumnDef="kricode">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none','white-space': 'nowrap'}"
															style="white-space: nowrap;"> KRI Code </th>
														<td mat-cell *matCellDef="let row"> {{row.KriCode}} </td>
													</ng-container>
													<ng-container matColumnDef="indicator">
														<th mat-header-cell *matHeaderCellDef width="10"
															[ngStyle]="{'display': 'none'}"> Indicator </th>
														<td mat-cell *matCellDef="let row" width="10"
															[matTooltip]="row.Indicator"> {{row.Indicator}} </td>
													</ng-container>
													<ng-container matColumnDef="Measurmentfrequency">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}"> Measurement Frequency
														</th>
														<td mat-cell *matCellDef="let row"> {{row.MeasurementFrequency}}
														</td>
													</ng-container>

													<ng-container matColumnDef="Target">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Target</th>
														<td mat-cell *matCellDef="let row"> {{row.Target}}%</td>
													</ng-container>
													<ng-container matColumnDef="Kritype">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">KRI Type</th>
														<td mat-cell *matCellDef="let row"> {{row.KriType}} </td>
													</ng-container>

													<ng-container matColumnDef="tvalue-1">
														<th mat-header-cell *matHeaderCellDef
															class="text-align-center tvalue1-bgcolor"
															[ngStyle]="{'border-top': 'none','border-right':'none'}">
															1
														</th>
														<td style="background-color: #df9c9c41 !important;" mat-cell
															*matCellDef="let row">{{row.Target==0?">":"<"}}
																{{row.ThresholdValue1}}% </td>
													</ng-container>
													<ng-container matColumnDef="tvalue-2">
														<th mat-header-cell *matHeaderCellDef
															class="text-align-center tvalue2-bgcolor"
															[ngStyle]="{'border-top': 'none','border-left':'none','border-right':'none'}">
															2
														</th>
														<td style="background-color: #ffbf0049 !important;" mat-cell
															*matCellDef="let row">{{row.Target==0?"<=":">
																="}}{{row.ThresholdValue2}}%</td>
													</ng-container>
													<ng-container matColumnDef="tvalue-3">
														<th mat-header-cell *matHeaderCellDef
															class="text-align-center tvalue3-bgcolor"
															[ngStyle]="{'border-top': 'none','border-left':'none','border-right':'none'}">
															3
														</th>
														<td style="background-color: #0095ff1e !important;" mat-cell
															*matCellDef="let row">{{row.Target==0?"<=":">
																="}}{{row.ThresholdValue3}}%</td>
													</ng-container>
													<ng-container matColumnDef="tvalue-4">
														<th mat-header-cell *matHeaderCellDef
															class="text-align-center tvalue4-bgcolor"
															[ngStyle]="{'border-top': 'none','border-left':'none','border-right':'none'}">
															4
														</th>
														<td style="background-color: #ffff0038 !important;" mat-cell
															*matCellDef="let row">{{row.Target==0?"<=":">
																="}}{{row.ThresholdValue4}}% </td>
													</ng-container>
													<ng-container matColumnDef="tvalue-5">
														<th mat-header-cell *matHeaderCellDef
															class="text-align-center tvalue5-bgcolor"
															[ngStyle]="{'border-top': 'none','border-left':'none'}">
															5
														</th>
														<td style="background-color: #1b8c1b25 !important;" mat-cell
															*matCellDef="let row">{{row.ThresholdValue5}}% </td>
													</ng-container>
													<ng-container matColumnDef="period">
														<th mat-header-cell *matHeaderCellDef class="text-align-center"
															[ngStyle]="{'border-top': 'none','border-right':'none','position': 'relative', 'bottom': '19px'}">
															Period</th>
														<td mat-cell *matCellDef="let row"> {{row.Period}} </td>
													</ng-container>
													<ng-container matColumnDef="date">
														<th mat-header-cell *matHeaderCellDef class="text-align-center"
															[ngStyle]="{'border-top': 'none','border-left':'none','border-right':'none','position': 'relative', 'bottom': '19px'}">
															Date</th>
														<td mat-cell *matCellDef="let row">
															{{utils.formatedDate(row.Date)}} </td>
													</ng-container>
													<ng-container matColumnDef="measurement">
														<th mat-header-cell *matHeaderCellDef class="text-align-center"
															[ngStyle]="{'border-top': 'none','border-left':'none','border-right':'none', 'position': 'relative', 'bottom': '19px'}">
															Measurement
														</th>
														<td mat-cell *matCellDef="let row">
															<mat-form-field class="editable">
																<div style="display: flex;">
																	<input matInput type="number" min="0" max="100"
																		[(ngModel)]="row.Measurement"
																		[disabled]="utils.isReadOnlyUserORM() || utils.isRiskManagementUnit() && (department == 'all' && kriService.powerUser == true)"
																		(keyup)="onChangeMeasurement(row)"
																		autocomplete="off">%
																</div>
															</mat-form-field>
														</td>
													</ng-container>
													<ng-container matColumnDef="krivalue">
														<th mat-header-cell *matHeaderCellDef class="text-align-center"
															[ngStyle]="{'border-top': 'none','border-left':'none', 'position': 'relative', 'bottom': '19px'}">
															KRI Value</th>
														<td mat-cell *matCellDef="let row">
															<div class="krivalue-container">
																<div [style.background-color]="row.ColorCode"
																	class="value-container">
																	{{row.ThresholdValue}}
																</div>
															</div>
														</td>
													</ng-container>
													<ng-container matColumnDef="Remarks">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Remarks</th>
														<td mat-cell *matCellDef="let row">
															<mat-form-field class="example-full-width"
																style="width:5vw;" matTooltip={{row.Remarks}}>
																<input [(ngModel)]="row.Remarks" matInput
																	[disabled]="utils.isReadOnlyUserORM() || utils.isRiskManagementUnit() && (department == 'all' && kriService.powerUser == true)"
																	(change)="onChangeRemarks(row)">
															</mat-form-field>

															<p *ngIf="row.ThresholdValue <=5 && row.ThresholdValue >=1 && getRemarkData(row.Remarks)"
																[ngStyle]="{'color':'red'}">Remarks is required</p>
														</td>
													</ng-container>
													<ng-container matColumnDef="status">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Status</th>
														<td mat-cell *matCellDef="let row">{{row.StatusName}}</td>
													</ng-container>
													<ng-container matColumnDef="upload">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Upload Evidence</th>
														<td mat-cell *matCellDef="let row">
															<app-file-upload
																[matTooltip]="((row.StatusName=='Not Measured' && kriService.powerUser == false && !utils.isReadOnlyUserORM()) || (row.StatusName=='Not Measured' && kriService.powerUser == true && department == 'own'))  ? 'Upload Evidence will be enabled once the KRI is in Measured' : ''"
																matTooltipPosition="above" [evdname]="'Kri Scoring'"
																[inputData]="row"
																[disabled]=" (((row.StatusName=='Not Measured' ||row.StatusName=='Reported' ) && kriService.powerUser == false) || ((row.StatusName=='Not Measured' ||row.StatusName=='Reported' )  && kriService.powerUser == true && department == 'own')) || (utils.isReadOnlyUserORM() || utils.isRiskManagementUnit() && (department == 'all' && kriService.powerUser == true))"
																[showFileIcon]="true"
																(filesdataOP)="OnfilesdataOP($event)"></app-file-upload>
														</td>
													</ng-container>
													<ng-container matColumnDef="action">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Prev Data</th>
														<td mat-cell *matCellDef="let row">
															<!-- {{'test data'}} -->
															<div class="tooltip">
																<img class="text-center"
																	src="assets/icons/icon-search-table.svg"
																	style="width: 62%;"
																	class="d-inline-block align-middle cursor-pointer"
																	alt="">
																<!-- <p class="view-previous">View Previous Data</p> -->
																<span class="tooltiptext">
																	<p align="start" class="historical-text">
																		Historical Data
																	</p>
																	<div *ngIf="!getPreviousScoring(row)">
																		<p style="text-align:center">Empty</p>
																	</div>
																	<table style="width:90%;" class="tooltip-table"
																		*ngIf="getPreviousScoring(row)">
																		<colgroup>
																			<col span="2">
																		</colgroup>
																		<tr class="tooltip-table">
																			<th></th>
																			<th class="tooltip-table">Period</th>
																			<th class="tooltip-table">Date</th>
																			<th class="tooltip-table">Measurement</th>
																			<th class="tooltip-table">KRI Value</th>
																		</tr>
																		<tr class="tooltip-table"
																			*ngFor="let data of getPreviousScoring(row)">
																			<td class="tooltip-table">
																				T-{{getPreviousScoring(row).indexOf(data)+1}}
																			</td>
																			<td class="tooltip-table">{{data.Period}}
																			</td>
																			<td class="tooltip-table">
																				{{utils.formatedDate(data.Date)}}</td>
																			<td class="tooltip-table">
																				{{data.Measurement}}%</td>
																			<td class="tooltip-table">
																				<div class="krivalue-container">
																					<div [style.background-color]="data.ColorCode"
																						class="krivalue">
																						<p
																							style="text-align:center; color:black;">
																							{{data.ThresholdValue}}</p>
																					</div>
																				</div>
																			</td>
																		</tr>
																	</table>
																</span>
															</div>
														</td>
													</ng-container>
													<ng-container matColumnDef="sendEmail">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Send Email</th>
														<td mat-cell *matCellDef="let row">
															<button mat-icon-button
																class="material-icons app-toolbar-menu save-button"
																[disabled]="kriService.kriReviewerUser == false || department == 'own'"
																(click)="sendIndividualEmailReminder(row.MetricID)"
																matTooltip="Send Reminder">
																<mat-icon
																	[ngStyle]="kriService.kriReviewerUser == true ? {'color': '#bdbdbd;'} : {'color': '#2470a3;'}">mail</mat-icon>
															</button>
														</td>
													</ng-container>
													<ng-container matColumnDef="checkerComments">
														<th mat-header-cell *matHeaderCellDef
															[ngStyle]="{'display': 'none'}">Checker Comments</th>
														<td mat-cell *matCellDef="let row">
															<mat-form-field class="example-full-width"
																style="width:5vw;"
																*ngIf="(kriService.kriReviewerUser == true && department != 'own' && row.StatusName == 'Reported')">
																<input [(ngModel)]="row.CommentData" matInput>
															</mat-form-field>
															<button mat-icon-button matTooltip="View Previous Comments"
																class="eye-icon"
																(click)="showComments(row.CommentData)">
																<mat-icon>visibility</mat-icon>
															</button>
														</td>
													</ng-container>
													<ng-container matColumnDef="header-row-rejectApproveBtn">
														<th mat-header-cell *matHeaderCellDef [attr.rowspan]="2"
															[attr.colspan]="1">
															<div class="d-flex justify-content-center">
																<div class="round"
																	[ngClass]="(kriService.kriReviewerUser == false || department == 'own') ? 'checkDisabled' : 'checkred'">
																	<input type="checkbox" id="checkbox1"
																		[disabled]="kriService.kriReviewerUser == false || department == 'own'" />
																	<label for="checkbox1"></label>
																</div>

																<div class="round"
																	[ngClass]="(kriService.kriReviewerUser == false || department == 'own') ? 'checkDisabled' : 'checkgreen'">
																	<input type="checkbox" id="checkbox2"
																		[disabled]="kriService.kriReviewerUser == false || department == 'own'" />
																	<label for="checkbox2"></label>
																</div>
															</div>
														</th>
													</ng-container>
													<ng-container matColumnDef="header-row-kri-code">
														<th mat-header-cell *matHeaderCellDef [attr.rowspan]="2"
															[attr.colspan]="1">KRI Code
														</th>
													</ng-container>
													<ng-container matColumnDef="header-row-indicator">
														<th mat-header-cell *matHeaderCellDef [attr.rowspan]="2"
															[attr.colspan]="1">Indicator
														</th>
													</ng-container>
													<ng-container matColumnDef="header-row-measurement-frequency">
														<th mat-header-cell *matHeaderCellDef [attr.rowspan]="2"
															[attr.colspan]="1">Measurement
															Frequency
														</th>
													</ng-container>
													<ng-container matColumnDef="header-row-target">
														<th mat-header-cell *matHeaderCellDef [attr.rowspan]="2"
															[attr.colspan]="1">Target
														</th>
													</ng-container>
													<ng-container matColumnDef="header-row-kri-type">
														<th mat-header-cell *matHeaderCellDef [attr.rowspan]="2"
															[attr.colspan]="1">KRI Type
														</th>
													</ng-container>
													<ng-container matColumnDef="header-row-fourth-group">
														<th mat-header-cell *matHeaderCellDef class="text-align-center"
															[attr.colspan]="5" [ngStyle]="{'text-align': 'center'}">
															Threshold Value</th>
													</ng-container>
													<ng-container matColumnDef="header-row-second-group">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="4"
															class="text-align-center"
															[ngStyle]="{'text-align': 'center'}"> PERIOD-T </th>
													</ng-container>
													<ng-container matColumnDef="header-row-remark">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="1"
															[attr.rowspan]="2">Remarks </th>
													</ng-container>
													<ng-container matColumnDef="header-row-status">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="1"
															[attr.rowspan]="2"> Status </th>
													</ng-container>
													<ng-container matColumnDef="header-row-preview">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="1"
															[attr.rowspan]="2">Prev Data</th>
													</ng-container>

													<ng-container matColumnDef="header-row-upload">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="1"
															[attr.rowspan]="2" style="border-right: none !important">
															Upload Evidence</th>
													</ng-container>

													<ng-container matColumnDef="header-row-sendEmail">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="1"
															[attr.rowspan]="2">Send Email</th>
													</ng-container>

													<ng-container matColumnDef="header-row-checkerComments">
														<th mat-header-cell *matHeaderCellDef [attr.colspan]="1"
															[attr.rowspan]="2">Checker Comments</th>
													</ng-container>
													<!-- rejectApproveBtn -->
													<tr mat-header-row style="height: 38px !important;"
														*matHeaderRowDef="['header-row-kri-code','header-row-indicator','header-row-measurement-frequency','header-row-target','header-row-kri-type', 'header-row-fourth-group',
															'header-row-second-group', 'header-row-remark', 'header-row-status','header-row-upload','header-row-preview', 'header-row-sendEmail', 'header-row-checkerComments']">
													</tr>
													<tr mat-header-row style="height: 38px !important;"
														*matHeaderRowDef="displayedColumns;"></tr>
													<tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
												</table>
												<mat-paginator #paginator [pageSize]="10"
													[pageSizeOptions]="[10, 25, 50, 100]"
													class="InherentTable"></mat-paginator>
												<div style="display:flex;justify-content:end;"
													*ngIf="department == 'own' || kriService.powerUser == false">
													<span class="disableText"
														*ngIf="(!isLastMonth() || utils.isReadOnlyUserORM() || (isDataModified() && !remarksFilled) || dataNotMeasured() || isReportedCount()) || !isUnitCount()">As
														per current Reporting Frequency "Report KRI" button is
														disabled</span>
													<button style="margin:10px;" mat-raised-button color="primary"
														(click)="reportKRIs()"
														[disabled]="(!isLastMonth() || utils.isReadOnlyUserORM() || (isDataModified() && !remarksFilled) || dataNotMeasured() || isReportedCount()) || !isUnitCount()">Report
														KRI(s)</button>
													<button style="margin:10px;" mat-raised-button color="primary"
														(click)="saveKRIs()" [disabled]="utils.isReadOnlyUserORM()">Save
														KRI(s)</button>
													<button style="margin:10px;" mat-raised-button
														(click)="cancel()">Cancel</button>
												</div>
												<!-- start of button design -->
												<div class="w-100 text-right py-2" style="padding-right: 10px"
													*ngIf="kriService?.kriReviewerUser == true && department != 'own'">
													<button type="button" class="btn btnreminder mr-2"
														(click)="sendBulkRemainder()"><span><img
																src="assets/icons/icon-email-btn.svg"
																style="width: 100%;"
																class="d-inline-block align-middle cursor-pointer"
																alt=""></span>Send Reminder to All Defaulter
														Units</button>
													<button type="button" class="btn btnsave mr-2"
														(click)="saveReviewerDetails()"><span style="left: -62%;"><img
																src="assets/icons/icon-save-btn.svg"
																style="width: 100%;"
																class="d-inline-block align-middle cursor-pointer"
																alt=""></span>Save</button>
													<button type="button" class="btn btnsubmit"
														(click)="openDialog()"><span style="left: -52%;"><img
																src="assets/icons/icon-submit-btn.svg"
																style="width: 100%;"
																class="d-inline-block align-middle cursor-pointer"
																alt=""></span>Submit</button>
												</div>
												<!-- end -->
											</div>
											<ng-template #noDataTemplate>
												<p class="no-data">No Data Found</p>
											</ng-template>
										</div>
									</div>
								</div>
							</div>
						</div>
					</main>
				</div>
			</div>
		</div>
	</div>
	<!-- start of model for send email -->

	<!-- end of model -->
</body>
<script src="../../../../../assets/js/main.js"></script>

</html>
