
<mat-toolbar class="fontSize">
    <!-- <button mat-raised-button color="primary" style="display:inline-block; padding:0vh 1vh;border-radius:100vw;margin-right: 10px;"
    (click)="navigateToPreviousPage()" matTooltip="Navigate back to RCSA Summary">
        <span style="font-size:16px; margin-right:10px;">&#11164;</span>Back
    </button> -->
<span>Risk Register</span>
<span class="spacer"></span>
</mat-toolbar>

<div class="container" >
    <div class="tab-content topTabContentBg">
    <mat-action-row style="padding-bottom: 0px; padding-right: 24px; padding-top: 20px;">
        <mat-form-field appearance="fill" class="filter-field" style="margin-left: 3vh;">
        <mat-label>Group</mat-label>
        <mat-select (selectionChange)="groupFilter($event.value)">
            <mat-option [value]="''">All Groups</mat-option>
            <mat-option *ngFor="let group of groupsData" [value]="group.GroupID">{{ group.GroupName }}</mat-option>
        </mat-select>
        </mat-form-field>

        <mat-form-field appearance="fill" class="filter-field" style="margin-left: 2vh;">
        <mat-label>Unit</mat-label>
        <mat-select (selectionChange)="unitFilter($event.value)">
            <mat-option [value]="''">All Units</mat-option>
            <mat-option *ngFor="let unit of filteredUnitData" [value]="unit.UnitID">{{ unit.UnitName }}</mat-option>
        </mat-select>
        </mat-form-field>

        <mat-form-field appearance="fill" class="filter-field" style="margin-left: 2vh;">
            <mat-label>Year</mat-label>
            <mat-select [multiple]="true" [(ngModel)]="selectedYear" (selectionChange)="yearFilter($event.value)">
                <!-- <mat-option [value]="''">All Year</mat-option> -->
                <mat-option *ngFor="let y of yearData" [value]="y">{{ y }}</mat-option>
            </mat-select>
        </mat-form-field>

        <mat-form-field appearance="fill" class="filter-field" style="margin-left: 2vh; ">
            <mat-label>Quarter</mat-label>
            <mat-select [multiple]="true" (selectionChange)="quarterFilter($event.value)">
                <!-- <mat-option [value]="''">All Quarter</mat-option> -->
                <mat-option *ngFor="let q of quarterData" [value]="q">{{ q }}</mat-option>
            </mat-select>
        </mat-form-field>

        <mat-form-field appearance="fill" class="filter-field" style="margin-left: 2vh; ">
            <mat-label>Action Plan Status</mat-label>
            <mat-select [value]="statusFilterValue" (selectionChange)="statusFilter($event.value)">
                <mat-option [value]="''">All Action Plan Status</mat-option>
                <mat-option *ngFor="let s of actionPlanStatusData" [value]="s.ActionPlanStatusID">{{ s.ActionPlanStatus }}</mat-option>
            </mat-select>
        </mat-form-field>

        <h4 class="riskTitle" style="white-space: nowrap;margin-left: 1vh;">
            <span class="riskTitleColor fs-4vh"><strong>{{this.dataSource.filteredData.length}} <span class="fs-3vh">Inherent Risk(s)</span></strong></span>
        </h4>

        <div class="assesment-button" style="margin-left: 2vh;">
            <mat-form-field appearance="fill" style="width: 13vw;">
                <mat-label>Search</mat-label>
                <input placeholder="Search" class="form-control tblfilter" matInput id="riskSearch" (keyup)="applyFilter($event)" />
            </mat-form-field>
        </div>
        <div style="margin-top: -1vh;margin-left: 1vh;">
            <span  (click)="exportAsXLSX()" class="mat-button-wrapper" matTooltip="Export to Excel">
                <img src="assets/icon-excel.svg" style="opacity:Â 1;"></span>
        </div>
    </mat-action-row>
    </div>

    <div fxLayout="row wrap" fxLayoutGap="10px grid" fxFlex="99" fxLayoutAlign="center start" style="height: 60vh;width:99.9vw;">
        <mat-card class="mat-elevation-z4" fxFlex="96" fxFlex.md="96" fxFlex.sm="100" fxFlexOffset.lg="1" fxFlexOffset.md="1" style="height: 71vh;" >
            <mat-card-content class="tablecontent" >
                <section class="table-container mat-elevation-z8" tabindex="0" style="width: 94vw;height: 67vh;margin: 1vh;">
                    <table mat-table [dataSource]="dataSource" class="full-width-table" matSort id="rcsaTable">
                        <ng-container matColumnDef="RCSACode" >
                            <th mat-header-cell *matHeaderCellDef >
                                <mat-form-field style = "width: 6vw; margin-left: -3vh; background-color: whitesmoke;border-radius: 4px;" class ="example-form-field searchField">
                                    <mat-label>RCSA Code <mat-icon> <img src="assets/icon-search.svg" height="75%"></mat-icon> </mat-label>
                                    <input class="form-control tblfilter" matInput id="riskSearch" (keyup)="searchInHeader($event, 'RCSACode')" />
                                </mat-form-field>
                            </th>
                            <td mat-cell *matCellDef="let element"> {{ element.RCSACode }} </td>
                        </ng-container>
                        <ng-container matColumnDef="SLNO"  >
                            <th mat-header-cell *matHeaderCellDef style = "width: 4vw;"> Risk Code </th>
                            <td mat-cell *matCellDef="let element"> {{ element.SLNO }} </td>
                        </ng-container>

                        <ng-container matColumnDef="Group" >
                            <th mat-header-cell *matHeaderCellDef  style = "width: 4vw;"> Group </th>
                            <td mat-cell *matCellDef="let element" > {{ element.GroupName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="Unit" >
                            <th mat-header-cell *matHeaderCellDef style = "width: 4vw;"> Unit </th>
                            <td mat-cell *matCellDef="let element"> {{ element.UnitName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="SchedulePeriod">
                            <th mat-header-cell *matHeaderCellDef > Period </th>
                            <td mat-cell *matCellDef="let element"> {{ element.SchedulePeriod }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ScheduleInherentRiskStatusName">
                            <th mat-header-cell *matHeaderCellDef > Status </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ScheduleInherentRiskStatusName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="RiskCategoryName">
                            <th mat-header-cell *matHeaderCellDef style = "width: 6vw;"> Risk Category </th>
                            <td mat-cell *matCellDef="let element"> {{ element.RiskCategoryName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ProcessName">
                            <th mat-header-cell *matHeaderCellDef > Process </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ProcessName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="Risk">
                            <th mat-header-cell *matHeaderCellDef style = "width: 10vw;"> Risk </th>
                            <td mat-cell *matCellDef="let element" > {{ element.Risk }} </td>
                        </ng-container>

                        <ng-container matColumnDef="InherentLikelihoodName">
                            <th mat-header-cell *matHeaderCellDef > Likelihood Rating </th>
                            <td mat-cell *matCellDef="let element"> {{ element.InherentLikelihoodName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="InherentImpactRatingName">
                            <th mat-header-cell *matHeaderCellDef > Impact Rating </th>
                            <td mat-cell *matCellDef="let element"> {{ element.InherentImpactRatingName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="OverallInherentRiskRating">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Overall Inherent Risk Rating </th>
                            <td mat-cell *matCellDef="let element" [ngStyle]="{ 'background-color': element.OverallInherentRiskColor }">
                            {{ element.OverallInherentRiskRating }}
                            </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlDescription">
                            <th mat-header-cell *matHeaderCellDef style = "width: 13vw;"> Control Description </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlDescription }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlInPaceName">
                            <th mat-header-cell *matHeaderCellDef > Control In Place </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlInPaceName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlTypeName">
                            <th mat-header-cell *matHeaderCellDef > Control Type </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlTypeName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlNatureName">
                            <th mat-header-cell *matHeaderCellDef > Control Nature </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlNatureName }} </td>
                        </ng-container>
                        <ng-container matColumnDef="ControlAutomationName">
                            <th mat-header-cell *matHeaderCellDef > Control Automation </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlAutomationName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlFrequencyName">
                            <th mat-header-cell *matHeaderCellDef > Control Frequency </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlFrequencyName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="OverallControlEnvironmentRiskRating">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Overall Control Environment Risk Rating </th>
                            <td mat-cell *matCellDef="let element" [ngStyle]="{ 'background-color': element.OverallControlEnvironmentRatingColourCode }"> {{ element.OverallControlEnvironmentRiskRating }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ResidualRiskRating">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Residual Risk Rating </th>
                            <td mat-cell *matCellDef="let element" [ngStyle] = "{'background-color' : element.ResidualRiskRatingColourCode}"> {{ element.ResidualRiskRating }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ResidualRiskResponseName">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Residual Risk Response </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ResidualRiskResponseName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ResidualRiskResponsiblePersonName">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Residual Risk Responsible Person </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ResidualRiskResponsiblePersonName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="IdentifiedAction">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Identified Action </th>
                            <td mat-cell *matCellDef="let element"> {{ element.IdentifiedAction }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ActionResponsiblePersonName">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Action Responsible Person </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ActionResponsiblePersonName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="Timeline">
                            <th mat-header-cell *matHeaderCellDef style = "width: 8vw;"> Timeline </th>
                            <td mat-cell *matCellDef="let element"> {{ element.Timeline  }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ActionPlanStatusName">
                            <th mat-header-cell *matHeaderCellDef style = "width: 6vw;"> Action Plan Status </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ActionPlanStatusName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ActionPlanComments">
                            <th mat-header-cell *matHeaderCellDef style = "width: 13vw;"> Action Plan Comments </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ActionPlanComments }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlVerificationClosureName">
                            <th mat-header-cell *matHeaderCellDef > Confirmation/Verification of Closure </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlVerificationClosureName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlTestingResultName">
                            <th mat-header-cell *matHeaderCellDef > Control Testing Result </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlTestingResultName }} </td>
                        </ng-container>

                        <ng-container matColumnDef="ControlTestingResultComment">
                            <th mat-header-cell *matHeaderCellDef style = "width: 16vw;"> Control Testing Result Comment </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ControlTestingResultComment }} </td>
                        </ng-container>

                        <ng-container matColumnDef="SelfComment">
                            <th mat-header-cell *matHeaderCellDef style = "width: 16vw;"> Comment </th>
                            <td mat-cell *matCellDef="let element"> {{ element.SelfComment }} </td>
                        </ng-container>
                        <ng-container matColumnDef="ReviewerComment">
                            <th mat-header-cell *matHeaderCellDef style = "width: 16vw;"> Reviewer Comment </th>
                            <td mat-cell *matCellDef="let element"> {{ element.ReviewerComment }} </td>
                        </ng-container>

                        <ng-container matColumnDef="RiskAge">
                            <th mat-header-cell *matHeaderCellDef style = "width: 16vw;"> Risk Age </th>
                            <td mat-cell *matCellDef="let element"> {{ element.RiskAge }} </td>
                        </ng-container>

                        <tr mat-header-row *matHeaderRowDef="displayedColumns; sticky: true;" ></tr>
                        <tr mat-row *matRowDef="let row; columns: displayedColumns; "></tr>
                        <tr *matNoDataRow><td [attr.colspan]="displayedColumns.length"><span style="color:red; font-size: large;margin-left: 45vw;">No data found.</span></td></tr>
                    </table>
                </section>
            </mat-card-content>
        </mat-card>

    </div>
</div>
